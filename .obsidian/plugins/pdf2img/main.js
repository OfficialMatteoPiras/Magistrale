/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var D=Object.defineProperty;var N=Object.getOwnPropertyDescriptor;var $=Object.getOwnPropertyNames;var L=Object.prototype.hasOwnProperty;var k=(g,i)=>{for(var e in i)D(g,e,{get:i[e],enumerable:!0})},B=(g,i,e,a)=>{if(i&&typeof i=="object"||typeof i=="function")for(let n of $(i))!L.call(g,n)&&n!==e&&D(g,n,{get:()=>i[n],enumerable:!(a=N(i,n))||a.enumerable});return g};var R=g=>B(D({},"__esModule",{value:!0}),g);var q={};k(q,{default:()=>b});module.exports=R(q);var t=require("obsidian"),V={enableHeaders:!1,headerSize:"#",headerExtractionSensitive:1.2,removeHeaderDuplicates:!1,imageResolution:1,afterImage:0,insertionMethod:"Procedual"},b=class extends t.Plugin{constructor(){super(...arguments);this.ribbonEl=null;this.lastExtractedHeader=null}async onload(){await this.loadSettings(),this.addSettingTab(new E(this.app,this)),this.ribbonEl=this.addRibbonIcon("image-plus","Convert PDF to images",()=>{this.openPDFToImageModal()}),this.pdfjsLib=await(0,t.loadPdfJs)(),this.fileManager=this.app.fileManager,this.addCommand({id:"open-pdf-to-image-modal",name:"Convert PDF to images",checkCallback:e=>this.app.workspace.getActiveViewOfType(t.MarkdownView)?(e||this.openPDFToImageModal(),!0):!1})}async loadSettings(){this.settings=Object.assign({},V,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}openPDFToImageModal(){let e=this.app.workspace.getActiveViewOfType(t.MarkdownView);e?new F(this.app,this.handlePdf.bind(this,e.editor),this.settings.imageResolution).open():new t.Notice("Please open a note to insert images")}insertImageLink(e,a){let n=e.getCursor(),o=a;this.settings.afterImage===0||this.settings.afterImage===1?o+=`
`:this.settings.afterImage===2?o+=`***
`:this.settings.afterImage===3&&(o+=`
***
`),e.replaceRange(o,n),e.setCursor(e.offsetToPos(e.posToOffset(n)+o.length))}async getAttachmentFolderPath(){return this.fileManager.getAvailablePathForAttachment("")}async extractHeader(e){var c;let n=(await e.getTextContent()).items.map(s=>({text:"str"in s?s.str:"",fontSize:s.transform[0]}));n.sort((s,d)=>d.fontSize-s.fontSize);let o=((c=n[0])==null?void 0:c.fontSize)||0,h=n.filter(s=>s.fontSize===o&&s.text.trim().length>0).map(s=>s.text).join(" ").trim();if(!h)return this.lastExtractedHeader="","";let l=n.reduce((s,d)=>s+d.fontSize,0)/n.length;if(o<l*this.settings.headerExtractionSensitive)return this.lastExtractedHeader="","";if(this.settings.removeHeaderDuplicates){if(h===this.lastExtractedHeader)return"";this.lastExtractedHeader=h}return h}async handlePdf(e,a,n){let o=null;try{let r=await a.arrayBuffer(),h=new Uint8Array(r),l=await this.pdfjsLib.getDocument({data:h}).promise,c=l.numPages;o=new t.Notice(`Processing PDF: 0/${c} pages`,0);let s=a.name.replace(".pdf",""),d=(0,t.normalizePath)(`${await this.getAttachmentFolderPath()}/${s}`),m=s.replace(/#/g,""),f=0;for(d=(0,t.normalizePath)(`${await this.getAttachmentFolderPath()}/${m}`);await this.app.vault.adapter.exists(d);)f++,d=(0,t.normalizePath)(`${await this.getAttachmentFolderPath()}/${m}_${f}`);await this.app.vault.createFolder(d);let p=[],v=n!==void 0?n:this.settings.imageResolution;for(let u=1;u<=c;u++){let y=await l.getPage(u),x=y.getViewport({scale:v}),w=document.createElement("canvas"),T=w.getContext("2d");if(!T)throw new Error("Failed to get canvas context");w.height=x.height,w.width=x.width;let O={canvasContext:T,viewport:x};await y.render(O).promise;let H=await new Promise((A,M)=>{w.toBlob(z=>{z?A(z):M(new Error("Failed to create image blob"))},"image/png")}),I=`page_${u}.png`,C=`${d}/${I}`;await this.app.vault.createBinary(C,await H.arrayBuffer());let S="";this.settings.enableHeaders&&(S=await this.extractHeader(y));let P=`${S?`${this.settings.headerSize} ${S}
`:""}![${I}](${encodeURI(C)})`;this.settings.afterImage&&(P+=`
`),p.push(P),o.setMessage(`Processing PDF: ${u}/${c} pages`),this.settings.insertionMethod==="Procedual"&&this.insertImageLink(e,P)}if(this.settings.insertionMethod==="Batch"){let u=p.join(`
`),y=e.getScrollInfo(),x=e.getCursor();e.replaceRange(u,x),e.scrollTo(y.left,y.top)}new t.Notice("PDF processing complete")}catch(r){console.error(r),new t.Notice("Failed to process PDF")}finally{o&&o.hide()}}},F=class extends t.Modal{constructor(e,a,n){super(e);this.onSubmit=a;this.file=null;this.imageQuality=n}onOpen(){let{contentEl:e}=this,a=e.createEl("h2",{text:"Select a PDF file to convert"});a.style.textAlign="center",a.style.marginTop="0px";let o=e.createDiv().createDiv();o.style.marginTop="5px",o.style.textAlign="center";let r=o.createEl("input",{type:"file",attr:{accept:".pdf"}});r.style.display="none";let h=o.createEl("button",{text:"Choose PDF File",attr:{"aria-label":"Choose PDF file to upload","aria-controls":r.id||"pdf-file-input"}});h.style.cssText=`
            padding: 8px 16px;
            cursor: pointer;
            font-size: 14px;
        `,r.id=r.id||"pdf-file-input",h.onclick=p=>{p.preventDefault(),r.click()};let l=o.createDiv();l.style.cssText=`
			margin-top: 8px;
			font-size: 0.9em;
			color: #666;
			font-style: italic;
		`,l.textContent="No file chosen",r.onchange=()=>{r.files&&r.files.length>0?(this.file=r.files[0],l.textContent=`${r.files[0].name}`,l.style.color="#7a7a7a",l.style.fontStyle="normal"):(l.textContent="No file chosen",l.style.color="#666",l.style.fontStyle="italic")};let c=e.createDiv();c.style.marginTop="15px",c.style.textAlign="center",c.createEl("label",{text:"Image Quality"}),c.createEl("br");let s=c.createEl("select");s.style.marginTop="5px",s.style.padding="5px",s.style.cursor="pointer",[{value:"0.5",text:"0.5x"},{value:"0.75",text:"0.75x"},{value:"1",text:"1x"},{value:"1.5",text:"1.5x"},{value:"2",text:"2x"}].forEach(p=>{let v=s.createEl("option",{value:p.value,text:p.text});v.style.textAlign="center",parseFloat(p.value)===this.imageQuality&&(v.selected=!0)}),s.onchange=()=>{this.imageQuality=parseFloat(s.value)};let m=e.createDiv();m.style.marginTop="20px",m.style.textAlign="center";let f=m.createEl("button",{text:"Convert"});f.style.padding="10px 20px",f.style.cursor="pointer",f.onclick=()=>{this.file?(this.onSubmit(this.file,this.imageQuality),this.close()):new t.Notice("Please select a PDF file")}}onClose(){let{contentEl:e}=this;e.empty()}},E=class extends t.PluginSettingTab{constructor(i,e){super(i,e),this.plugin=e}display(){let{containerEl:i}=this;i.empty(),new t.Setting(i).setName("Image quality").setDesc("The quality of the images to be generated. Lower = faster and smaller file size, higher = slower and bigger file size. The default is 1x.").addDropdown(e=>e.addOption("0.5","0.5x").addOption("0.75","0.75x").addOption("1","1x").addOption("1.5","1.5x").addOption("2","2x").setValue(this.plugin.settings.imageResolution.toString()).onChange(async a=>{this.plugin.settings.imageResolution=parseFloat(a),await this.plugin.saveSettings()})),new t.Setting(i).setName("Image insertion method").setDesc("Choose how images are inserted into the editor.").addDropdown(e=>e.addOption("Procedual","Procedual (inserts images one by one)").addOption("Batch","Batch (inserts all images at once)").setValue(this.plugin.settings.insertionMethod).onChange(async a=>{this.plugin.settings.insertionMethod=a,await this.plugin.saveSettings()})),new t.Setting(i).setName("Image separator").setDesc("Choose what to insert after each image.").addDropdown(e=>e.addOption("0","None").addOption("1","Empty line").addOption("2","Separator line").addOption("3","Empty line + separator line").setValue(this.plugin.settings.afterImage.toString()).onChange(async a=>{this.plugin.settings.afterImage=parseInt(a,10),await this.plugin.saveSettings()})),new t.Setting(i).setName("Insert headers (BETA)").setDesc("Finds headers in images and inserts them above the image. This is a beta feature and may not work as expected.").addToggle(e=>e.setValue(this.plugin.settings.enableHeaders).onChange(async a=>{this.plugin.settings.enableHeaders=a,await this.plugin.saveSettings(),this.display()})),this.plugin.settings.enableHeaders&&(new t.Setting(i).setName("Remove header duplicates").setDesc("Removes duplicate headers from the image. This is useful if the same header appears on multiple pages.").addToggle(e=>e.setValue(this.plugin.settings.removeHeaderDuplicates).onChange(async a=>{this.plugin.settings.removeHeaderDuplicates=a,await this.plugin.saveSettings(),this.display()})),new t.Setting(i).setName("Header size").setDesc("The size of the header to be inserted above the image.").addDropdown(e=>e.addOption("#","h1").addOption("##","h2").addOption("###","h3").addOption("####","h4").addOption("#####","h5").setValue(this.plugin.settings.headerSize).onChange(async a=>{this.plugin.settings.headerSize=a,await this.plugin.saveSettings()})),new t.Setting(i).setName("Header extraction sensitivity").setDesc("The sensitivity of the header extraction algorithm. Increase this value if headers are not being detected. Lower this value if non-headers are being detected as headers. The default is 1.2.").addSlider(e=>{e.setLimits(0,2,.1).setValue(this.plugin.settings.headerExtractionSensitive).setDynamicTooltip().onChange(async a=>{this.plugin.settings.headerExtractionSensitive=a,await this.plugin.saveSettings()})}))}};

/* nosourcemap */